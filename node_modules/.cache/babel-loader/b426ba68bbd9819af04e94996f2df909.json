{"ast":null,"code":"import { useReducer, useEffect } from 'react';\nimport axios from 'axios';\nconst ACTIONS = {\n  MAKE_REQUEST: 'make-request',\n  GET_DATA: 'get-data',\n  ERROR: 'error',\n  UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\n};\nconst BASE_URL = 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.MAKE_REQUEST:\n      return {\n        loading: true,\n        jobs: []\n      };\n\n    case ACTIONS.GET_DATA:\n      return { ...state,\n        loading: false,\n        jobs: action.payload.jobs\n      };\n\n    case ACTIONS.ERROR:\n      return { ...state,\n        loading: false,\n        error: action.payload.error,\n        jobs: []\n      };\n\n    case ACTIONS.UPDATE_HAS_NEXT_PAGE:\n      return { ...state,\n        hasNextPage: action.payload.hasNextPage\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default function useFetchJobs(params, page) {\n  const [state, dispatch] = useReducer(reducer, {\n    jobs: [],\n    loading: true\n  });\n  useEffect(() => {\n    const cancelToken1 = axios.CancelToken.source();\n    dispatch({\n      type: ACTIONS.MAKE_REQUEST\n    });\n    axios.get(BASE_URL, {\n      cancelToken: cancelToken.token,\n      params: {\n        markdown: true,\n        page: page,\n        ...params\n      }\n    }).then(res => {\n      dispatch({\n        type: ACTIONS.GET_DATA,\n        payload: {\n          jobs: res.data\n        }\n      });\n    }).catch(e => {\n      if (axios.isCancel(e)) return;\n      dispatch({\n        type: ACTIONS.ERROR,\n        payload: {\n          error: e\n        }\n      });\n    });\n    const cancelToken2 = axios.CancelToken.source();\n    axios.get(BASE_URL, {\n      cancelToken: cancelToken.token,\n      params: {\n        markdown: true,\n        page: page + 1,\n        ...params\n      }\n    }).then(res => {\n      dispatch({\n        type: ACTIONS.UPDATE_HAS_NEXT_PAGE,\n        payload: {\n          hasNextPage: res.data.length !== 0\n        }\n      });\n    }).catch(e => {\n      if (axios.isCancel(e)) return;\n      dispatch({\n        type: ACTIONS.ERROR,\n        payload: {\n          error: e\n        }\n      });\n    });\n    return () => {\n      cancelToken1.cancel();\n      cancelToken2.cancel();\n    };\n  }, [params, page]);\n  return state;\n}","map":{"version":3,"sources":["C:/Users/Indana Rishi/Desktop/Course/Javascript Project/github-jobs/src/useFetchJobs.js"],"names":["useReducer","useEffect","axios","ACTIONS","MAKE_REQUEST","GET_DATA","ERROR","UPDATE_HAS_NEXT_PAGE","BASE_URL","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","useFetchJobs","params","page","dispatch","cancelToken1","CancelToken","source","get","cancelToken","token","markdown","then","res","data","catch","e","isCancel","cancelToken2","length","cancel"],"mappings":"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","sourcesContent":["import { useReducer, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ACTIONS = {\r\n    MAKE_REQUEST: 'make-request',\r\n    GET_DATA: 'get-data',\r\n    ERROR: 'error',\r\n    UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\r\n}\r\n\r\nconst BASE_URL = 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json';\r\n\r\nfunction reducer(state, action){\r\n    switch(action.type){\r\n        case ACTIONS.MAKE_REQUEST:\r\n            return { loading: true, jobs: [] }\r\n        case ACTIONS.GET_DATA:\r\n            return {...state, loading: false, jobs: action.payload.jobs }\r\n        case ACTIONS.ERROR:\r\n            return {...state, loading: false, error: action.payload.error, jobs: [] }\r\n        case ACTIONS.UPDATE_HAS_NEXT_PAGE:\r\n            return {...state, hasNextPage: action.payload.hasNextPage }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default function useFetchJobs(params, page){\r\n    const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true })\r\n\r\n    useEffect(() => {\r\n        const cancelToken1 = axios.CancelToken.source();\r\n        dispatch({ type: ACTIONS.MAKE_REQUEST })\r\n        axios.get(BASE_URL, {\r\n            cancelToken: cancelToken.token,\r\n            params: { markdown: true, page: page, ...params }\r\n        }).then(res => {\r\n            dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } })\r\n        }).catch(e => {\r\n            if (axios.isCancel(e)) return\r\n            dispatch({ type: ACTIONS.ERROR, payload: { error: e } })\r\n        })\r\n\r\n        const cancelToken2 = axios.CancelToken.source();\r\n        axios.get(BASE_URL, {\r\n            cancelToken: cancelToken.token,\r\n            params: { markdown: true, page: page + 1, ...params }\r\n        }).then(res => {\r\n            dispatch({ type: ACTIONS.UPDATE_HAS_NEXT_PAGE, payload: { hasNextPage: res.data.length !== 0 } })\r\n        }).catch(e => {\r\n            if (axios.isCancel(e)) return\r\n            dispatch({ type: ACTIONS.ERROR, payload: { error: e } })\r\n        })\r\n\r\n        return () => {\r\n            cancelToken1.cancel();\r\n            cancelToken2.cancel();\r\n        }\r\n    }, [params, page])\r\n\r\n    return state\r\n}"]},"metadata":{},"sourceType":"module"}